/*
 * More web UI HTML source arrays.
 * This file is auto generated, please don't make any changes manually.
 * Instead, see https://kno.wled.ge/advanced/custom-features/#changing-web-ui
 * to find out how to easily modify the web UI source!
 */ 

// Autogenerated from wled00/data/fr/style.css, do not edit!!
const char PAGE_settingsCss[] PROGMEM = R"=====(<style>body{font-family:Verdana,sans-serif;text-align:center;background:#222;color:#fff;line-height:200%%;margin:0}hr{border-color:#666}a{color:#28f;text-decoration:none}.btn,button{background:#333;color:#fff;font-family:Verdana,sans-serif;border:.3ch solid #333;display:inline-block;font-size:20px;margin:12px 8px 8px;padding:1px 6px;cursor:pointer;text-decoration:none}.lnk{border:0}.helpB{text-align:left;position:absolute;width:60px}input{background:#333;color:#fff;font-family:Verdana,sans-serif;border:.5ch solid #333}input:disabled{color:#888}input[type=number]{width:4em;margin:2px}input[type=number].xxl{width:100px}input[type=number].xl{width:85px}input[type=number].l{width:63px}input[type=number].m{width:56px}input[type=number].s{width:49px}input[type=number].xs{width:42px}input[type=checkbox]{transform:scale(1.5)}select{background:#333;color:#fff;font-family:Verdana,sans-serif;border:.5ch solid #333}td{padding:2px}.d5{width:4.5em!important}#toast{opacity:0;background-color:#444;border-radius:5px;bottom:64px;color:#fff;font-size:17px;padding:16px;pointer-events:none;position:fixed;text-align:center;z-index:5;transform:translateX(-50%%);max-width:90%%;left:50%%}#toast.show{opacity:1;background-color:#264;animation:fadein .5s,fadein .5s 2.5s reverse}#toast.error{opacity:1;background-color:#b21;animation:fadein .5s}</style>)=====";


// Autogenerated from wled00/data/fr/settings.htm, do not edit!!
const char PAGE_settings[] PROGMEM = R"=====(<!DOCTYPE html><html lang="fr"><head><meta charset="UTF-8"><title>
Paramètres WLED</title><style>
body{text-align:center;background:#222;height:100px;margin:0}html{--h:10.2vh}button{background:#333;color:#fff;font-family:Verdana,Helvetica,sans-serif;border:1px solid #333;border-radius:var(--h);font-size:6vmin;height:var(--h);width:calc(100%% - 40px);margin-top:2vh}
</style></head><body><form action="/"><button type="submit" id="b">Retour
</button></form><form action="/settings/wifi"><button type="submit">
Paramètres WiFi</button></form><form action="/settings/leds"><button 
type="submit">Préférences des LEDs</button></form><form action="/settings/ui">
<button type="submit">Interface utilisateur</button></form><form 
action="/settings/sync"><button type="submit">Interfaces de Synchro.</button>
</form><form action="/settings/time"><button type="submit">Temps & Macros
</button></form><form action="/settings/um"><button type="submit">
Mods utilisateur</button></form><form action="/settings/sec"><button 
type="submit">Securité & Mis à jour</button></form></body></html>)=====";


// Autogenerated from wled00/data/fr/settings_wifi.htm, do not edit!!
const char PAGE_settings_wifi[] PROGMEM = R"=====(<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta 
name="viewport" content="width=500"><title>Paramètres WiFi</title><script>
function H(){window.open("https://github.com/Aircoookie/WLED/wiki/Settings#wifi-settings")}function B(){window.open("/settings","_self")}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="GetV()">
<form id="form_s" name="Sf" method="post"><div class="helpB"><button 
type="button" onclick="H()">?</button></div><button type="button" onclick="B()">
Retour</button><button type="submit">Sauvegarder & Connectez</button><hr><h2>
Paramètres WiFi</h2><h3>Connectez à un réseau existant</h3>
Nom réseau (SSID, vide si non connecté):<br><input name="CS" maxlength="32"><br>
Mot de passe réseau:<br><input type="password" name="CP" maxlength="63"><br>
IP Statique laissez à 0.0.0.0 pour le DHCP:<br><input name="I0" type="number" 
class="s" min="0" max="255" required> . <input name="I1" type="number" 
class="s" min="0" max="255" required> . <input name="I2" type="number" 
class="s" min="0" max="255" required> . <input name="I3" type="number" 
class="s" min="0" max="255" required><br>Passerelle static:<br><input name="G0" 
type="number" class="s" min="0" max="255" required> . <input name="G1" 
type="number" class="s" min="0" max="255" required> . <input name="G2" 
type="number" class="s" min="0" max="255" required> . <input name="G3" 
type="number" class="s" min="0" max="255" required><br>
Masque de sous réseau statique:<br><input name="S0" type="number" class="s" 
min="0" max="255" required> . <input name="S1" type="number" class="s" min="0" 
max="255" required> . <input name="S2" type="number" class="s" min="0" 
max="255" required> . <input name="S3" type="number" class="s" min="0" 
max="255" required><br>Adresse mDNS (laissez vide pour désactiver le mDNS):<br>
http:// <input name="CM" maxlength="32"> .local<br>IP du client: <span 
class="sip">Non connecté</span><br><h3>Configurez le Point d'Accès</h3>
SSID de l'AP (laissez vite pour pas d'AP):<br><input name="AS" maxlength="32">
<br>Cachez le nom de l'AP: <input type="checkbox" name="AH"><br>
Mot de passe de l'AP (Vide ou au min. 8 caractères):<br><input type="password" 
name="AP" maxlength="63" pattern="(.{8,63})|()" 
title="Vide ou au min. 8 caractères"><br>Canal WiFi du Point d'Accès: <input 
name="AC" type="number" class="xs" min="1" max="13" required><br>AP s'ouvre: 
<select name="AB"><option value="0">Aucune connexion après démarrage</option>
<option value="1">Déconnecté</option><option value="2">Toujours</option><option 
value="3">Jamais (non recommandé)</option></select><br>IP de l'AP: <span 
class="sip">{{Not active}</span><br><h3>Expérimental</h3>
Désactiver le sommeil WiFi: <input type="checkbox" name="WS"><br><i>
Peut aider en cas de problème de connexion.<br>
Ne l'activez pas si le WiFi fonctionne correctement, au risque d'augmenter la consommation électrique.
</i><div id="ethd"><h3>Type d'Ethernet</h3><select name="ETH"><option value="0">
Aucun</option><option value="2">ESP32-POE</option><option value="6">ESP32Deux
</option><option value="4">QuinLED-ESP32</option><option value="5">
TwilightLord-ESP32</option><option value="3">WESP32</option><option value="1">
WT32-ETH01</option></select><br><br></div><hr><button type="button" 
onclick="B()">Retour</button><button type="submit">Sauvegarder & Connectez
</button></form></body></html>)=====";


// Autogenerated from wled00/data/fr/settings_leds.htm, do not edit!!
const char PAGE_settings_leds[] PROGMEM = R"=====(<!DOCTYPE html><html lang="fr"><head><meta charset="utf-8"><meta 
name="viewport" content="width=500"><title>Paramètres des LED</title><script>
var timeout,d=document,laprev=55,maxB=1,maxM=4e3,maxPB=4096,maxL=1333,maxLbquot=0,customStarts=!1,startsDirty=[];function H(){window.open("https://kno.wled.ge/features/settings/#led-settings")}function B(){window.open("/settings","_self")}function gId(e){return d.getElementById(e)}function off(e){d.getElementsByName(e)[0].value=-1}function showToast(e,n=!1){var t=gId("toast");t.innerHTML=e,t.className=n?"error":"show",clearTimeout(timeout),t.style.animation="none",timeout=setTimeout((function(){t.className=t.className.replace("show","")}),2900)}function bLimits(e,n,t,a){maxB=e,maxM=t,maxPB=n,maxL=a}function pinsOK(){var e=d.getElementsByTagName("input");for(i=0;i<e.length;i++){var n=e[i].name.substring(0,2);if("L0"==n||"L1"==n||"L2"==n||"L3"==n){var t=e[i].name.substring(2);if(parseInt(d.getElementsByName("LT"+t)[0].value,10)>=80)continue}if(("L0"==n||"L1"==n||"L2"==n||"L3"==n||"L4"==n||"RL"==n||"BT"==n||"IR"==n)&&""!=e[i].value&&"-1"!=e[i].value){if(d.um_p&&d.um_p.some(n=>n==parseInt(e[i].value,10)))return alert(`Désolé, les broches ${JSON.stringify(d.um_p)} ne peuvent être utilisés.`),e[i].value="",e[i].focus(),!1;if(e[i].value>5&&e[i].value<12)return alert("Désolé, les broches 6-11 ne peuvent être utilisés."),e[i].value="",e[i].focus(),!1;if("IR"!=n&&"BT"!=n&&e[i].value>33)return alert("Désolé, les broches >33 sont en entrée seulement."),e[i].value="",e[i].focus(),!1;for(j=i+1;j<e.length;j++){var a=e[j].name.substring(0,2);if("L0"==a||"L1"==a||"L2"==a||"L3"==a||"L4"==a||"RL"==a||"BT"==a||"IR"==a){if("L"===a.substring(0,1)){var s=e[j].name.substring(2);if(parseInt(d.getElementsByName("LT"+s)[0].value,10)>=80)continue}if(""!=e[j].value&&e[i].value==e[j].value)return alert(`Conflit entre les broches ${e[i].name}/${e[j].name}!`),e[j].value="",e[j].focus(),!1}}}}return!0}function trySubmit(e){if(d.Sf.data.value="",e.preventDefault(),!pinsOK())return e.stopPropagation(),!1;if(bquot>100){var n="Impossible de gérer autant de LEDs!";maxM<1e4&&(n+="\n\rUtilisez plutôt un ESP32."),alert(n)}d.Sf.checkValidity()&&d.Sf.submit()}function S(){GetV(),checkSi(),setABL()}function enABL(){var e=gId("able").checked;d.Sf.LA.value=e?laprev:0,gId("abl").style.display=e?"inline":"none",gId("psu2").style.display=e?"inline":"none",d.Sf.LA.value>0&&setABL()}function enLA(){var e=d.Sf.LAsel.value;d.Sf.LA.value=e,gId("LAdis").style.display=50==e?"inline":"none",UI()}function setABL(){switch(gId("able").checked=!0,d.Sf.LAsel.value=50,parseInt(d.Sf.LA.value)){case 0:gId("able").checked=!1,enABL();break;case 30:d.Sf.LAsel.value=30;break;case 35:d.Sf.LAsel.value=35;break;case 55:d.Sf.LAsel.value=55;break;case 255:d.Sf.LAsel.value=255;break;default:gId("LAdis").style.display="inline"}gId("m1").innerHTML=maxM,d.getElementsByName("Sf")[0].addEventListener("submit",trySubmit),UI()}function getMem(e,n,t){return e<32?maxM<1e4&&3==t?e>29?20*n:15*n:maxM>=1e4?e>29?8*n:6*n:e>29?4*n:3*n:e>31&&e<48?5:44==e||45==e?4*n:3*n}function UI(e=!1){var n=!1,t=0;gId("ampwarning").style.display=d.Sf.MA.value>7200?"inline":"none",255==d.Sf.LA.value?laprev=12:d.Sf.LA.value>0&&(laprev=d.Sf.LA.value);var a=d.getElementsByTagName("select");for(i=0;i<a.length;i++)if("LT"==a[i].name.substring(0,2)){var s=a[i].name.substring(2),l=parseInt(a[i].value,10);gId("p0d"+s).innerHTML=l>=80&&l<96?"Addresse IP:":l>49?"data GPIO:":l>41?"GPIOs:":"GPIO:",gId("p1d"+s).innerHTML=l>49&&l<64?"Clk GPIO:":"";var o=d.getElementsByName("L1"+s)[0];for(t+=getMem(l,d.getElementsByName("LC"+s)[0].value,d.getElementsByName("L0"+s)[0].value),f=1;f<5;f++){(o=d.getElementsByName("L"+f+s)[0])&&(l>=80&&l<96&&f<4||l>49&&1==f||l>41&&l<50&&f+40<l?(o.style.display="inline",o.required=!0):(o.style.display="none",o.required=!1,o.value=""))}e&&(gId("rf"+s).checked=gId("rf"+s).checked||31==l,l>31&&l<48&&(d.getElementsByName("LC"+s)[0].value=1)),gId("rf"+s).onclick=31==l?function(){return!1}:function(){},n|=30==l||31==l||l>40&&l<46&&43!=l,gId("co"+s).style.display=l>=80&&l<96||41==l||42==l?"none":"inline",gId("dig"+s+"c").style.display=l>40&&l<48?"none":"inline",gId("dig"+s+"r").style.display=l>=80&&l<96?"none":"inline",gId("dig"+s+"s").style.display=l>=80&&l<96||l>40&&l<48?"none":"inline",gId("dig"+s+"f").style.display=l>=16&&l<32||l>=50&&l<64?"inline":"none",gId("rev"+s).innerHTML=l>40&&l<48?"Sortie inversée":"Inversé pivoter à 180°",gId("psd"+s).innerHTML=l>40&&l<48?"Index:":"Début:"}var r=d.querySelectorAll(".wc"),u=r.length;for(i=0;i<u;i++)r[i].style.display=n?"inline":"none";var p=d.getElementsByTagName("input"),m=0,v=0,c=0;for(i=0;i<p.length;i++){var g=p[i].name.substring(0,2);s=p[i].name.substring(2);if("LC"!=g){if("L0"==g||"L1"==g)d.getElementsByName("LC"+s)[0].max=maxPB;if("L0"==g||"L1"==g||"L2"==g||"L3"==g){if((l=parseInt(d.getElementsByName("LT"+s)[0].value))>=80){p[i].max=255,p[i].min=0,p[i].style.color="#fff";continue}p[i].max=33,p[i].min=-1}if(("L0"==g||"L1"==g||"L2"==g||"L3"==g||"L4"==g||"RL"==g||"BT"==g||"IR"==g)&&""!=p[i].value&&"-1"!=p[i].value){var f=[];if(d.um_p&&Array.isArray(d.um_p))for(k=0;k<d.um_p.length;k++)f.push(d.um_p[k]);for(j=0;j<p.length;j++)if(i!=j){var L=p[j].name.substring(0,2);if("L0"==L||"L1"==L||"L2"==L||"L3"==L||"L4"==L||"RL"==L||"BT"==L||"IR"==L){if("L"===L.substring(0,1)){var y=p[j].name.substring(2);if(parseInt(d.getElementsByName("LT"+y)[0].value,10)>=80)continue}""!=p[j].value&&"-1"!=p[j].value&&f.push(parseInt(p[j].value,10))}}f.some(e=>e==parseInt(p[i].value,10))?p[i].style.color="red":p[i].style.color=parseInt(p[i].value,10)>33?"orange":"#fff"}}else{var I=parseInt(p[i].value,10);customStarts&&startsDirty[s]||(gId("ls"+s).value=m),gId("ls"+s).disabled=!customStarts,I&&((a=parseInt(gId("ls"+s).value))+I>m&&(m=a+I),I>c&&(c=I),(l=parseInt(d.getElementsByName("LT"+s)[0].value))<80&&(v+=I))}}gId("lc").textContent=m,gId("pc").textContent=m==v?"":"("+v+" physique)",gId("m0").innerHTML=t,bquot=t/maxM*100,gId("dbar").style.background=`linear-gradient(90deg, ${bquot>60?bquot>90?"red":"orange":"#ccc"} 0 ${bquot}%%, #444 ${bquot}%% 100%%)`,gId("ledwarning").style.display=c>Math.min(maxPB,800)||bquot>80?"inline":"none",gId("ledwarning").style.color=c>Math.max(maxPB,800)||bquot>100?"red":"orange",gId("wreason").innerHTML=bquot>80?"80% de mémoire LED max."+(bquot>100?` (<b>ERREUR: Plus de ${maxM}B!</b>)`:""):"800 LEDs par sortie";var B=Math.ceil((100+v*laprev)/500)/2;B=B>5?Math.ceil(B):B;a="";var b=30==d.Sf.LAsel.value,h=255==d.Sf.LAsel.value;B<1.02&&!b&&!h?a="La broche 5V de l'ESP avec une alimentation USB de 1A":(a+=b?"12V ":h?"WS2815 12V ":"5V ",a+=B,a+="Une alimentation connectée aux LEDs");var x=Math.ceil((100+v*laprev)/1500)/2,E="(pour avoir plus d'effets, ~";E+=x=x>5?Math.ceil(x):x,E+="A est suffisant)<br>",gId("psu").innerHTML=a,gId("psu2").innerHTML=h?"":E,gId("json").style.display=8==d.Sf.IT.value?"":"none"}function lastEnd(e){if(e<1)return 0;v=parseInt(d.getElementsByName("LS"+(e-1))[0].value)+parseInt(d.getElementsByName("LC"+(e-1))[0].value);var n=parseInt(d.getElementsByName("LT"+(e-1))[0].value);return n>31&&n<48&&(v=1),isNaN(v)?0:v}function addLEDs(e,n=!0){var t=d.getElementsByClassName("iST"),a=t.length;if(!(1==e&&a>=maxB||-1==e&&0==a)){var i=gId("mLC");if(1==e){var s=`<div class="iST">\n<hr style="width:260px">\n${a+1}:\n<select name="LT${a}" onchange="UI(true)">\n<option value="22" selected>WS281x</option>\n<option value="30">SK6812 RGBW</option>\n<option value="31">TM1814</option>\n<option value="24">400kHz</option>\n<option value="50">WS2801</option>\n<option value="51">APA102</option>\n<option value="52">LPD8806</option>\n<option value="53">P9813</option>\n<option value="41">PWM White</option>\n<option value="42">PWM CCT</option>\n<option value="43">PWM RGB</option>\n<option value="44">PWM RGBW</option>\n<option value="45">PWM RGB+CCT</option>\n\x3c!--option value="46">PWM RGB+DCCT</option--\x3e\n<option value="80">DDP RGB (network)</option>\n\x3c!--option value="81">E1.31 RGB (network)</option--\x3e\n\x3c!--option value="82">ArtNet RGB (network)</option--\x3e\n</select>&nbsp;\n<div id="co${a}" style="display:inline">Color Order:\n<select name="CO${a}">\n<option value="0">GRB</option>\n<option value="1">RGB</option>\n<option value="2">BRG</option>\n<option value="3">RBG</option>\n<option value="4">BGR</option>\n<option value="5">GBR</option>\n</select></div>\n<br>\n<span id="psd${a}">début:</span> <input type="number" name="LS${a}" id="ls${a}" class="l starts" min="0" max="8191" value="${lastEnd(a)}" oninput="startsDirty[${a}]=true;UI();" required />&nbsp;\n<div id="dig${a}c" style="display:inline">Longueur: <input type="number" name="LC${a}" class="l" min="1" max="${maxPB}" value="1" required oninput="UI()" /></div>\n<br>\n<span id="p0d${a}">GPIO:</span> <input type="number" name="L0${a}" min="0" max="33" required class="xs" onchange="UI()"/>\n<span id="p1d${a}"></span><input type="number" name="L1${a}" min="0" max="33" class="xs" onchange="UI()"/>\n<span id="p2d${a}"></span><input type="number" name="L2${a}" min="0" max="33" class="xs" onchange="UI()"/>\n<span id="p3d${a}"></span><input type="number" name="L3${a}" min="0" max="33" class="xs" onchange="UI()"/>\n<span id="p4d${a}"></span><input type="number" name="L4${a}" min="0" max="33" class="xs" onchange="UI()"/>\n<div id="dig${a}r" style="display:inline"><br><span id="rev${a}">Inversé</span>: <input type="checkbox" name="CV${a}"></div>\n<div id="dig${a}s" style="display:inline"><br>Ignorer 1<sup>st</sup> LED: <input id="sl${a}" type="checkbox" name="SL${a}"></div>\n<div id="dig${a}f" style="display:inline"><br>Off Recharger: <input id="rf${a}" type="checkbox" name="RF${a}"></div>\n</div>`;i.insertAdjacentHTML("beforeend",s)}-1==e&&(t[--a].remove(),--a),gId("+").style.display=a<maxB-1?"inline":"none",gId("-").style.display=a>0?"inline":"none",n||UI()}}function addBtn(e,n,t){var a=gId("btns").innerHTML,i="BT"+String.fromCharCode((e<10?48:55)+e);a+=`Bouton ${e} GPIO: <input type="number" min="-1" max="40" name="${i}" onchange="UI()" class="xs" value="${n}">`,a+=`&nbsp;<select name="${"BE"+String.fromCharCode((e<10?48:55)+e)}">`,a+=`<option value="0" ${0==t?"selected":""}>Déactiver</option>`,a+=`<option value="2" ${2==t?"selected":""}>Bouton</option>`,a+=`<option value="3" ${3==t?"selected":""}>Bouton inversé</option>`,a+=`<option value="4" ${4==t?"selected":""}>Interrupteur</option>`,a+=`<option value="5" ${5==t?"selected":""}>Capteur PIR</option>`,a+=`<option value="6" ${6==t?"selected":""}>Tactile</option>`,a+=`<option value="7" ${7==t?"selected":""}>Analogique</option>`,a+=`<option value="8" ${8==t?"selected":""}>Analogique inversé</option>`,a+="</select>",a+=`<span style="cursor: pointer;" onclick="off('${i}')">&nbsp;&#215;</span><br>`,gId("btns").innerHTML=a}function tglSi(e){(customStarts=e)||(startsDirty=[]),UI()}function checkSi(){for(var e=!1,n=1;n<d.getElementsByClassName("iST").length;n++){parseInt(gId("ls"+(n-1)).value)+parseInt(d.getElementsByName("LC"+(n-1))[0].value)!=parseInt(gId("ls"+n).value)&&(e=!0,startsDirty[n]=!0)}0!=parseInt(gId("ls0").value)&&(e=!0,startsDirty[0]=!0),gId("si").checked=e,tglSi(e)}function uploadFile(e){var n=new XMLHttpRequest;n.addEventListener("load",(function(){showToast(this.responseText,this.status>=400)})),n.addEventListener("error",(function(e){showToast(e.stack,!0)})),n.open("POST","/upload");var t=new FormData;return t.append("data",d.Sf.data.files[0],e),n.send(t),d.Sf.data.value="",!1}function loadCfg(e){var n,t;"function"==typeof window.FileReader?(e.files?e.files[0]?(n=e.files[0],(t=new FileReader).onload=function(e){let n=e.target.result;var t=JSON.parse(n);if(t.hw){if(t.hw.led){for(var a=0;a<10;a++)addLEDs(-1);t.hw.led.ins.forEach((e,n,t)=>{addLEDs(1);for(var a=0;a<e.pin.length;a++)d.getElementsByName(`L${a}${n}`)[0].value=e.pin[a];d.getElementsByName("LT"+n)[0].value=e.type,d.getElementsByName("LS"+n)[0].value=e.start,d.getElementsByName("LC"+n)[0].value=e.len,d.getElementsByName("CO"+n)[0].value=e.order,d.getElementsByName("SL"+n)[0].checked=e.skip,d.getElementsByName("RF"+n)[0].checked=e.ref,d.getElementsByName("CV"+n)[0].checked=e.rev})}if(t.hw.btn){var i=t.hw.btn;Array.isArray(i.ins)&&(gId("btns").innerHTML=""),i.ins.forEach((e,n,t)=>{addBtn(n,e.pin[0],e.type)}),d.getElementsByName("TT")[0].value=i.tt}t.hw.ir&&(d.getElementsByName("IR")[0].value=t.hw.ir.pin,d.getElementsByName("IT")[0].value=t.hw.ir.type),t.hw.relay&&(d.getElementsByName("RL")[0].value=t.hw.relay.pin,d.getElementsByName("RM")[0].checked=t.hw.relay.inv),UI()}},t.readAsText(n)):alert("Veuillez sélectionner un fichier JSON d'abord!"):alert("La propriété `files` dans les file inputs n'est pas géré par votre navigateur."),e.value=""):alert("L'API file n'est pas géré par votre navigateur pour le moment.")}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post"><div class="helpB"><button type="button" 
onclick="H()">?</button></div><button type="button" onclick="B()">Retour
</button><button type="submit">Sauvegarder</button><hr><h2>
LED &amp; Paramètres matériels</h2>Nombre de LEDs: <span id="lc">?</span> <span 
id="pc"></span><br><i>
Alimentation recommandée pour avoir un blanc le plus brillant possible:</i><br>
<b><span id="psu">?</span></b><br><span id="psu2"><br></span><br>
Activer la limitation de luminosité automatique: <input type="checkbox" 
name="ABen" onchange="enABL()" id="able"><br><div id="abl">Intensité maximum: 
<input name="MA" type="number" class="l" min="250" max="65000" oninput="UI()" 
required> mA<br><div id="ampwarning" style="color:orange;display:none">
&#9888; Votre alimentation fournit une intensité élevée.<br>
Pour améliorer la sécurité de votre configuration ,<br>
Utiliser des câbles épais svp.,<br>
Plusieurs points d'injection du courant et un fusible!<br></div><i>
Limite automatiquement la luminosité pour rester au plus près de cette limite.
<br>
Laisser à &lt;1A si vous alimentez les LEDS directement depuis la broche 5V de l'ESP!
<br>
Si vous utilisez une alimentation externe, mettez l'intensité max. de celle-ci.
<br>(Consommation actuelle estimée: <span class="pow">inconnu</span>)</i><br>
<br>Tension des LED Intensité Max. pour une LED:<br><select name="LAsel" 
onchange="enLA()"><option value="55" selected="selected">5V par défaut (55mA)
</option><option value="35">5V économique (35mA)</option><option value="30">
12V (30mA)</option><option value="255">WS2815 (12mA)</option><option value="50">
Personnalisée</option></select><br><span id="LAdis" style="display:none">
Intensité max. d'une LED personnalisée: <input name="LA" type="number" min="0" 
max="255" id="la" oninput="UI()" required> mA<br></span><i>
Laissez par défaut si vous ne savez pas quel est le type de LED utilisé.</i><br>
</div><h3>Paramètres matériels</h3><div id="mLC">Sorties LED:</div><hr 
style="width:260px"><button type="button" id="+" onclick="addLEDs(1,!1)" 
style="display:none;border-radius:20px;height:36px">+</button> <button 
type="button" id="-" onclick="addLEDs(-1,!1)" 
style="display:none;border-radius:20px;width:36px;height:36px">-</button><br>
Utilisation mémoire des LED: <span id="m0">0</span> / <span id="m1">?</span> B
<br><div id="dbar" 
style="display:inline-block;width:100px;height:10px;border-radius:20px"></div>
<br><div id="ledwarning" style="color:orange;display:none">
&#9888; Vous risquez d'avoir des problèmes de lag et de stabilité.<br>
Utiliser moins de <span id="wreason">800 LEDs par sortie</span>
 pour une meilleure expérience!<br></div><hr style="width:260px">
Faire un segment pour chaque sortie: <input type="checkbox" name="MS"><br>
Index de départ des bus personnalisés: <input type="checkbox" 
onchange="tglSi(this.checked)" id="si"><br><hr style="width:260px"><div 
id="btns"></div>Seuil d'activation tactile: <input type="number" class="s" 
min="0" max="100" name="TT" required><br>IR GPIO: <input type="number" min="-1" 
max="40" name="IR" onchange="UI()" class="xs"><select name="IT" onchange="UI()">
<option value="0">Télécommande déactivé</option><option value="1">24-Touches RGB
</option><option value="2">24-Touches avec CT</option><option value="3">
40-Touches bleu</option><option value="4">44-Touches RGB</option><option 
value="5">21-Touches RGB</option><option value="6">6-Touches noir</option>
<option value="7">9-Touches rouge</option><option value="8">Télécommande JSON
</option></select><span style="cursor:pointer" onclick='off("IR")'>&nbsp;&#215;
</span><br><div id="json" style="display:none">Fichier JSON: <input type="file" 
name="data" accept=".json"> <input type="button" value="Upload" 
onclick='uploadFile("/ir.json")'><br></div><div id="toast"></div><a 
href="https://kno.wled.ge/interfaces/infrared/" target="_blank">Info IR</a><br>
Relai GPIO: <input type="number" min="-1" max="33" name="RL" onchange="UI()" 
class="xs"> Inversé <input type="checkbox" name="RM"><span 
style="cursor:pointer" onclick='off("RL")'>&nbsp;&#215;</span><br><hr 
style="width:260px"><h3>Par défaut</h3>
Allumer les LEDs après un démarrage/reset: <input type="checkbox" name="BO"><br>
Luminosité par défaut: <input name="CA" type="number" class="s" min="0" 
max="255" required> (0-255)<br><br>Lancer le preset <input name="BP" 
type="number" class="s" min="0" max="250" required>
 au démarrage (0 pour le paramètre par défaut)<br><br>
Utilisez la correction Gamma pour les couleurs: <input type="checkbox" 
name="GC"> (fortement recommandé)<br>
Utilisez la correction Gamma pour la luminosité: <input type="checkbox" 
name="GB"> (non recommandé)<br><br>Facteur de luminosité: <input name="BF" 
type="number" class="s" min="1" max="255" required> %%<h3>Transitions</h3>
Fondu: <input type="checkbox" name="TF"><br>Temps de transition: <input 
name="TD" type="number" class="l" min="0" max="65500"> ms<br>
Activer les transitions de palette: <input type="checkbox" name="PF"><h3>
Lumière minutée</h3>Durée par défaut: <input name="TL" type="number" class="s" 
min="1" max="255" required> min<br>Luminosité à atteindre par défaut: <input 
name="TB" type="number" class="s" min="0" max="255" required><br>Mode: <select 
name="TW"><option value="0">Attendre et activer</option><option value="1">Fondu
</option><option value="2">Couleur du fondu</option><option value="3">
Lever de soleil</option></select><h3>Gestion du blanc</h3>
Correction de la balance des blancs: <input type="checkbox" name="CCT"><br><span
 class="wc">Calculer automatiquement le canal des blancs depuis le RGB:<br>
<select name="AW"><option value="0">Aucun</option><option value="1">
Plus lumineux</option><option value="2">Précis</option><option value="3">Doublé
</option></select><br>Calculer le CCT depuis le RGB: <input type="checkbox" 
name="CR"><br>mélange additif du CCT: <input type="number" class="s" min="0" 
max="100" name="CB" required> %%</span><h3>Avancé</h3>Mélange de la Palette: 
<select name="PB"><option value="0">Linéaire (recouvrir quand il y a changement)
</option><option value="1">Linéaire (toujours recouvrir)</option><option 
value="2">Linéaire (ne jamais recouvrir)</option><option value="3">
Aucun (non recommandé)</option></select><br>
Taux de rafraichissement pour atteindre le réglage: <input type="number" 
class="s" min="1" max="120" name="FR" required> FPS<hr style="width:260px"><div 
id="cfg">Modèle de Config: <input type="file" name="data2" accept=".json"> 
<input type="button" value="Appliquer" onclick="loadCfg(d.Sf.data2)"><br></div>
<hr><button type="button" onclick="B()">Retour</button><button type="submit">
Sauvegarder</button></form></body></html>)=====";


#ifdef WLED_ENABLE_DMX

// Autogenerated from wled00/data/fr/settings_dmx.htm, do not edit!!
const char PAGE_settings_dmx[] PROGMEM = R"=====(<!DOCTYPE html><html lang="fr"><head><meta name="viewport" content="width=500">
<meta charset="utf-8"><title>Paramètres DMX</title><script>
function GCH(e){for(d=document,d.getElementById("dmxchannels").innerHTML+="",i=0;i<e;i++)d.getElementById("dmxchannels").innerHTML+="<span id=CH"+(i+1)+"s >Canal "+(i+1)+": <select name=CH"+(i+1)+' id="CH'+(i+1)+'"><option value=0>Mettre à 0</option><option value=1>Red</option><option value=2>Vert</option><option value=3>Bleu</option><option value=4>White</option><option value=5>Shutter (obturateur) (Luminosité)</option><option value=6>Mettre à 255</option></select></span><br />\n'}function mMap(){for(d=document,numCh=document.Sf.CN.value,numGap=document.Sf.CG.value,parseInt(numCh)>parseInt(numGap)?d.getElementById("gapwarning").style.display="block":d.getElementById("gapwarning").style.display="none",i=0;i<15;i++)i>=numCh?(d.getElementById("CH"+(i+1)+"s").style.opacity="0.5",d.getElementById("CH"+(i+1)).disabled=!0):(d.getElementById("CH"+(i+1)+"s").style.opacity="1",d.getElementById("CH"+(i+1)).disabled=!1)}function S(){GCH(15),GetV(),mMap()}function H(){window.open("https://github.com/Aircoookie/WLED/wiki/DMX")}function B(){window.history.back()}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post"><div class="helpB"><button type="button" 
onclick="H()">?</button></div><button type="button" onclick="B()">Retour
</button><button type="submit">Sauvegarder</button><hr><h2>
Imma firin ma lazer (Si le support DMX est actif)</h2>Proxy de l'Univers <input 
name="PU" type="number" min="0" max="63999" required>
 de E1.31 à DMX (0=désactivé)<br><i>
Ceci va désactiver la sortie de données des LEDS vers le DMX, configuré ci-dessous
</i><br><br><i>
Le nombre de dispositifs est paramétré dans la page de configuration des LED</i>
<br>Canaux par dispositif (15 max): <input type="number" min="1" max="15" 
name="CN" maxlength="2" onchange="mMap()"><br>Canal de départ: <input 
type="number" min="1" max="512" name="CS" maxlength="2"><br>
Espacement depuis les canaux de départ: <input type="number" min="1" max="512" 
name="CG" maxlength="2" onchange="mMap()"> [ <a 
href="javascript:alert('if set to 10, first fixture will start at 10,\nsecond will start at 20 etc.\nRegardless of the channel count.\nMakes memorizing channel numbers easier.');">
info</a> ]<br><div id="gapwarning" style="color:orange;display:none">
ATTENTION: les écarts entre les canal sont inférieur au nombre de canal par dispositif.
<br>Les LEDS pourraient se chevaucher.</div><button type="button" 
onclick='location.href="/dmxmap"'>Mapping DMX</button><br>
Dispositif DMX de départ des LED: <input type="number" min="0" max="1500" 
name="SL"><h3>Fonctions du canal</h3><div id="dmxchannels"></div><hr><button 
type="button" onclick="B()">Retour</button><button type="submit">Sauvegarder
</button></form></body></html>)=====";


#else
const char PAGE_settings_dmx[] PROGMEM = R"=====()=====";
#endif

// Autogenerated from wled00/data/fr/settings_ui.htm, do not edit!!
const char PAGE_settings_ui[] PROGMEM = R"=====(<!DOCTYPE html><html><head lang="fr"><meta charset="utf-8"><meta 
name="viewport" content="width=500"><title>Paramètres de l'UI</title><script>
var initial_ds,initial_st,timeout,d=document,sett=null,l={comp:{labels:"Afficher les étiquettes des boutons",colors:{LABEL:"Méthodes de sélection des couleurs",picker:"Roue des couleurs",rgb:"Barre RGB",quick:"Sélection rapide des couleurs",hex:"Entrée des couleurs HEX"},pcmbot:"Afficher la barre du bas en mode PC",pid:"Afficher les ID des presets",seglen:"Afficher la longueur du segment à la place de la LED de fin",css:"Activer le CSS personnalisé",hdays:"Activer la liste des jours de fête"},theme:{alpha:{bg:"Opacité du fond",tab:"Opacité des boutons"},bg:{url:"URL de l'image de fond",random:"Image de fond aléatoire"},color:{bg:"couleur HEX du fond"}}};function gId(e){return d.getElementById(e)}function isObject(e){return e&&"object"==typeof e&&!Array.isArray(e)}function set(e,t,i){for(var n=t,s=e.split("_"),a=s.length,o=0;o<a-1;o++){var d=s[o];n[d]||(n[d]={}),n=n[d]}n[s[a-1]]=i}function showToast(e,t=!1){var i=gId("toast");i.innerHTML=e,i.className=t?"error":"show",clearTimeout(timeout),i.style.animation="none",timeout=setTimeout((function(){i.className=i.className.replace("show","")}),2900)}function addRec(e,t="",n=null){var s="";for(i in e){var a=t+(t?"_":"")+i;if(isObject(e[i]))n&&n[i]&&n[i].LABEL&&(s+=`<h3>${n[i].LABEL}</h3>`),s+=addRec(e[i],a,n?n[i]:null);else{var o=a;if(n&&n[i]?o=n[i]:e[i+"LABEL"]&&(o=e[i+"LABEL"]),i.indexOf("LABEL")>0)continue;var d=typeof e[i];gId(a)?("boolean"===d?gId(a).checked=e[i]:gId(a).value=e[i],gId(a).previousElementSibling.matches(".l")&&(gId(a).previousElementSibling.innerHTML=o)):"boolean"===d?s+=`${o}: <input class="agi cb" type="checkbox" id=${a} ${e[i]?"checked":""}><br>`:"number"===d?s+=`${o}: <input class="agi" type="number" id=${a} value=${e[i]}><br>`:"string"===d&&(s+=`${o}:<br><input class="agi" id=${a} value=${e[i]}><br>`)}}return s}function genForm(e){var t;t=addRec(e,"",l),gId("gen").innerHTML=t}function GetLS(){(sett=localStorage.getItem("wledUiCfg"))||(gId("lserr").style.display="inline");try{sett=JSON.parse(sett)}catch(e){sett={},gId("lserr").style.display="inline",gId("lserr").innerHTML="&#9888; Impossible de parser la configuration JSON. ("+e+")"}genForm(sett),gId("dm").checked="light"===gId("theme_base").value}function SetLS(){for(var e=d.querySelectorAll(".agi"),t=0;t<e.length;t++){var i=e[t],n=i.classList.contains("cb")?i.checked:i.value;set(i.id,sett,n),console.log(`${i.id} set to ${n}`)}try{localStorage.setItem("wledUiCfg",JSON.stringify(sett)),gId("lssuc").style.display="inline"}catch(i){gId("lssuc").style.display="none",gId("lserr").style.display="inline",gId("lserr").innerHTML="&#9888; Impossible de sauvegarder la configuration JSON. ("+i+")"}}function Save(){SetLS(),d.Sf.DS.value==initial_ds&&d.Sf.ST.checked==initial_st||d.Sf.submit()}function S(){GetV(),initial_ds=d.Sf.DS.value,initial_st=d.Sf.ST.checked,GetLS()}function H(){window.open("https://github.com/Aircoookie/WLED/wiki/Settings#user-interface-settings")}function B(){window.open("/settings","_self")}function UI(){gId("idonthateyou").style.display=gId("dm").checked?"inline":"none";var e=gId("theme_base");e&&(e.value=gId("dm").checked?"light":"dark")}function setRandomBg(){gId("theme_bg_random").checked?gId("theme_bg_url").value="https://picsum.photos/1920/1080":gId("theme_bg_url").value=""}function checkRandomBg(){"https://picsum.photos/1920/1080"===gId("theme_bg_url").value?gId("theme_bg_random").checked=!0:gId("theme_bg_random").checked=!1}function uploadFile(e,t){var i=new XMLHttpRequest;i.addEventListener("load",(function(){showToast(this.responseText,this.status>=400)})),i.addEventListener("error",(function(e){showToast(e.stack,!0)})),i.open("POST","/upload");var n=new FormData;return n.append("data",e.files[0],t),i.send(n),e.value="",!1}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post"><div 
style="position:sticky;top:0;background-color:#222;z-index:1"><div 
class="helpB"><button type="button" onclick="H()">?</button></div><button 
type="button" onclick="B()">Retour</button><button type="button" 
onclick="Save()">Sauvegarder</button><br><span id="lssuc" 
style="color:green;display:none">&#10004; Paramètres de l'UI local sauvegardés!
</span> <span id="lserr" style="color:red;display:none">
&#9888; Impossible d'accéder au stockage local. Vérifier qu'il est bien activé dans le navigateur.
</span><hr></div><h2>Paramètres Web</h2>Description du serveur: <input 
name="DS" maxlength="32"><br>
Le bouton Synchro active à la fois la réception et l'envoi: <input 
type="checkbox" name="ST"><br><i>
Les customisations de l'UI suivante sont uniques que ce soit par l'appareil WLED ou ce navigateur.
<br>
Vous devrez les reparamétrer si vous utiliser un navigateur , un appareil, ou une adresse IP WLED différent.
<br>Recharger l'UI principale pour appliquer les changements.</i><br><div 
id="gen">Changement des paramètres...</div><h3>Apparence de l'UI</h3><span 
class="l"></span>: <input type="checkbox" id="comp_labels" class="agi cb"><br>
<span class="l"></span>: <input type="checkbox" id="comp_pcmbot" class="agi cb">
<br><span class="l"></span>: <input type="checkbox" id="comp_pid" 
class="agi cb"><br><span class="l"></span>: <input type="checkbox" 
id="comp_seglen" class="agi cb"><br>Je déteste le monde sombre: <input 
type="checkbox" id="dm" onchange="UI()"><br><span id="idonthateyou" 
style="display:none"><i>Mais pourquoi ?? </i>&#x1F97A;<br></span><span 
class="l"></span>: <input type="number" min="0.0" max="1.0" step="0.01" 
id="theme_alpha_tab" class="agi"><br><span class="l"></span>: <input 
type="number" min="0.0" max="1.0" step="0.01" id="theme_alpha_bg" class="agi">
<br><span class="l"></span>: <input id="theme_color_bg" maxlength="9" 
class="agi"><br><span class="l">URL de l'image de fond</span>: <input 
id="theme_bg_url" class="agi" oninput="checkRandomBg()"><br><span class="l">
Image de fond aléatoire</span>: <input type="checkbox" id="theme_bg_random" 
class="agi cb" onchange="setRandomBg()"><br><input id="theme_base" class="agi" 
style="display:none"> <span class="l"></span>: <input type="checkbox" 
id="comp_css" class="agi cb"><br><div id="skin">CSS personnalisé: <input 
type="file" name="data" accept=".css"> <input type="button" value="Copier" 
onclick='uploadFile(d.Sf.data,"/skin.css")'><br></div><span class="l"></span>: 
<input type="checkbox" id="comp_hdays" class="agi cb"><br><div id="holidays">
Jours de fête: <input type="file" name="data2" accept=".json"> <input 
type="button" value="Copier" onclick='uploadFile(d.Sf.data2,"/holidays.json")'>
<br></div><div id="toast"></div><hr><button type="button" onclick="B()">Retour
</button><button type="button" onclick="Save()">Sauvegarder</button></form>
</body></html>)=====";


// Autogenerated from wled00/data/fr/settings_sync.htm, do not edit!!
const char PAGE_settings_sync[] PROGMEM = R"=====(<!DOCTYPE html><html lang="fr"><head><meta name="viewport" content="width=500">
<meta charset="utf-8"><title>Paramètres de Synchro</title><script>
var d=document;function gId(e){return d.getElementById(e)}function H(){window.open("https://github.com/Aircoookie/WLED/wiki/Settings#sync-settings")}function B(){window.open("/settings","_self")}function adj(){6454==d.Sf.DI.value?(1==d.Sf.DA.value&&(d.Sf.DA.value=0),1==d.Sf.EU.value&&(d.Sf.EU.value=0)):5568==d.Sf.DI.value&&(0==d.Sf.DA.value&&(d.Sf.DA.value=1),0==d.Sf.EU.value&&(d.Sf.EU.value=1))}function FC(){for(j=0;j<8;j++)gId("G"+(j+1)).checked=gId("GS").value>>j&1,gId("R"+(j+1)).checked=gId("GR").value>>j&1}function GC(){var e=0,d=0,n=1;for(j=0;j<8;j++)e+=gId("G"+(j+1)).checked*n,d+=gId("R"+(j+1)).checked*n,n*=2;gId("GS").value=e,gId("GR").value=d}function SP(){var e=d.Sf.DI.value;gId("xp").style.display=e>0?"none":"block",e>0&&(d.Sf.EP.value=e)}function SetVal(){switch(parseInt(d.Sf.EP.value)){case 5568:d.Sf.DI.value=5568;break;case 6454:d.Sf.DI.value=6454;break;case 4048:d.Sf.DI.value=4048}SP(),FC()}function S(){GetV(),SetVal()}function GetV() {
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post" onsubmit="GC()"><div class="helpB"><button 
type="button" onclick="H()">?</button></div><button type="button" onclick="B()">
Retour</button><button type="submit">Sauvegarder</button><hr><h2>
Paramètres de Synchro</h2><h3>Broadcast WLED</h3>Port UDP: <input name="UP" 
type="number" min="1" max="65535" class="d5" required><br>Second Port: <input 
name="U2" type="number" min="1" max="65535" class="d5" required><br><br><input 
name="GS" id="GS" type="number" style="display:none"> <input name="GR" id="GR" 
type="number" style="display:none"><table style="margin:0 auto"><tr><td>
Groupe de synchro</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6
</td><td>7</td><td>8</td></tr><tr><td>Envoyer:</td><td><input type="checkbox" 
id="G1" name="G1"></td><td><input type="checkbox" id="G2" name="G2"></td><td>
<input type="checkbox" id="G3" name="G3"></td><td><input type="checkbox" 
id="G4" name="G4"></td><td><input type="checkbox" id="G5" name="G5"></td><td>
<input type="checkbox" id="G6" name="G6"></td><td><input type="checkbox" 
id="G7" name="G7"></td><td><input type="checkbox" id="G8" name="G8"></td></tr>
<tr><td>Recevoir:</td><td><input type="checkbox" id="R1" name="R1"></td><td>
<input type="checkbox" id="R2" name="R2"></td><td><input type="checkbox" 
id="R3" name="R3"></td><td><input type="checkbox" id="R4" name="R4"></td><td>
<input type="checkbox" id="R5" name="R5"></td><td><input type="checkbox" 
id="R6" name="R6"></td><td><input type="checkbox" id="R7" name="R7"></td><td>
<input type="checkbox" id="R8" name="R8"></td></tr></table><br>Recevoir: <input 
type="checkbox" name="RB">Luminosité, <input type="checkbox" name="RC">
Couleur, et <input type="checkbox" name="RX">Effets<br>
Notifications en cas de changement direct: <input type="checkbox" name="SD"><br>
Notifications en cas d'appui de bouton ou IR: <input type="checkbox" name="SB">
<br>Envoyer des notifications Alexa: <input type="checkbox" name="SA"><br>
Envoi des notifications de changement sur Philips Hue: <input type="checkbox" 
name="SH"><br>Envoi des macros de notifications: <input type="checkbox" 
name="SM"><br>Envoi d'une notification en double: <input type="checkbox" 
name="S2"><br><i>Redémarrage requis pour appliquer les changements.</i><h3>
Liste des instance</h3>Activer la liste des instances: <input type="checkbox" 
name="NL"><br>Faire que cette instance soit découvrable: <input type="checkbox" 
name="NB"><h3>Temps réel</h3>Recevoir de l'UDP en temps réel: <input 
type="checkbox" name="RD"><br><br><i>Entrée DMX réseau</i><br>Type: <select 
name="DI" onchange="SP(),adj()"><option value="5568">E1.31 (sACN)</option>
<option value="6454">Art-Net</option><option value="0" selected="selected">
Port personnalisé</option></select><br><div id="xp">Port: <input name="EP" 
type="number" min="1" max="65535" value="5568" class="d5" required><br></div>
Multicast: <input type="checkbox" name="EM"><br>Début univers: <input name="EU" 
type="number" min="0" max="63999" required><br><i>Redémarrage requis.</i>
 Aller voir <a href="https://github.com/LedFx/LedFx" target="_blank">LedFx</a>!
<br>Omettre les paquets dans le désordre: <input type="checkbox" name="ES"><br>
DMX Adresse de démarrage: <input name="DA" type="number" min="0" max="510" 
required><br>Mode DMX: <select name="DM"><option value="0">Déactiver</option>
<option value="1">RGB simple</option><option value="2">DRGB simple</option>
<option value="3">Effet</option><option value="4">Multi RGB</option><option 
value="5">Variateur + Multi RGB</option><option value="6">Multi RGBW</option>
</select><br><a href="https://github.com/Aircoookie/WLED/wiki/E1.31-DMX" 
target="_blank">E1.31 info</a><br>Délai d'attente: <input name="ET" 
type="number" min="1" max="65000" required> ms<br>Forcez la luminosité max: 
<input type="checkbox" name="FB"><br>Désactiver la correction gamma temps réel: 
<input type="checkbox" name="RG"><br>Décalage des LED temps réel: <input 
name="WO" type="number" min="-255" max="255" required><h3>Assistant vocale Alexa
</h3>Émuler un appareil Alexa: <input type="checkbox" name="AL"><br>Nom Alexa: 
<input name="AI" maxlength="32"><h3>Blynk</h3><b>
Blynk, MQTT et Hue sync se connecte tous à des hôtes externes!<br>
Ceci peut avoir un impact sur la réactivité de l'ESP.</b><br>
Pour de meilleurs résultats, n'utilisez pas plus d'un service à la fois.<br>
(Sinon, connectez un deuxième ESP à celui-ci pour utiliser la synchro UDP)<br>
<br>Hôte: <input name="BH" maxlength="32"> Port: <input name="BP" type="number" 
min="1" max="65535" value="80" class="d5"><br>Token d'Auth de l'appareil: <input
 name="BK" maxlength="33"><br><i>Effacer le champ du token pour le désactiver. 
</i><a href="https://github.com/Aircoookie/WLED/wiki/Blynk" target="_blank">
Info des paramètres</a><h3>MQTT</h3>Activer MQTT: <input type="checkbox" 
name="MQ"><br>Broker: <input name="MS" maxlength="32"> Port: <input 
name="MQPORT" type="number" min="1" max="65535" class="d5"><br><b>
Les identifiants MQTT sont envoyés depuis une connexion non sécurisée.<br>
N'utilisez pas ce mot de passe MQTT pour un autre service!</b><br>Utilisateur: 
<input name="MQUSER" maxlength="40"><br>Mot de passe: <input type="password" 
name="MQPASS" maxlength="64"><br>ID Client: <input name="MQCID" maxlength="40">
<br>Topic de l'appareil: <input name="MD" maxlength="32"><br>Topic du groupe: 
<input name="MG" maxlength="32"><br>Publié en cas d'appui de bouton: <input 
type="checkbox" name="BM"><br><i>
Redémarrage requis pour appliquer les changements. </i><a 
href="https://github.com/Aircoookie/WLED/wiki/MQTT" target="_blank">Info MQTT
</a><h3>Philips Hue</h3><i>
Vous pouvez trouver l'IP de la passerelle et le numéro de la lumière dans la section 'À Propos' de l'application hue.
</i><br>Interroger la lumière Hue <input name="HL" type="number" min="1" 
max="99"> chaque <input name="HI" type="number" min="100" max="65000"> ms: 
<input type="checkbox" name="HP"><br>Puis, recevoir <input type="checkbox" 
name="HO"> On/Off, <input type="checkbox" name="HB"> Luminosité, et <input 
type="checkbox" name="HC"> Couleur<br>IP de la Passerelle Hue:<br><input 
name="H0" type="number" min="0" max="255"> . <input name="H1" type="number" 
min="0" max="255"> . <input name="H2" type="number" min="0" max="255"> . <input 
name="H3" type="number" min="0" max="255"><br><b>
Appuyez sur le bouton pushlink de la passerelle, puis sauvegarder!</b><br>
(lors de la première connexion)<br>Statut Hue: <span class="sip">
Désactivé dans cette version du build</span><hr><button type="button" 
onclick="B()">Retour</button><button type="submit">Sauvegarder</button></form>
</body></html>)=====";


// Autogenerated from wled00/data/fr/settings_time.htm, do not edit!!
const char PAGE_settings_time[] PROGMEM = R"=====(<!DOCTYPE html><html lang="fr"><head><meta name="viewport" content="width=500">
<meta charset="utf-8"><title>Paramètres du temps</title><script>
var d=document,ms=["Jan","Fév","Mar","Avr","Mai","Juin","Jul","Aoû","Sep","Oct","Nov","Déc"],cals='style="font-size:27px;margin-top:-6px;cursor:pointer"';function H(){window.open("https://kno.wled.ge/features/settings/#time-settings")}function B(){window.open("/settings","_self")}function S(){BTa(),GetV(),updLoc(),Cs(),FC()}function gId(t){return d.getElementById(t)}function gN(t){return d.getElementsByName(t)[0]}function expand(t,e){var n=gId("WD"+e);n.style.display="none"!==n.style.display?"none":"",t.innerHTML="none"===n.style.display?"&#128467;":"&#x2715;"}function Cs(){gId("cac").style.display="none",gId("coc").style.display="block",gId("ccc").style.display="none",gId("ca").selected&&(gId("cac").style.display="block"),gId("cc").selected&&(gId("coc").style.display="none",gId("ccc").style.display="block"),gId("cn").selected&&(gId("coc").style.display="none")}function BTa(){var t="<tr><th>Activé</th><th>Heure</th><th>Minute</th><th>Preset</th><th></th></tr>";for(i=0;i<8;i++){for(t+=`<tr><td><input name="W${i}" id="W${i}" type="hidden"><input id="W${i}0" type="checkbox"></td>\n<td><input name="H${i}" class="xs" type="number" min="0" max="24"></td>\n<td><input name="N${i}" class="xs" type="number" min="0" max="59"></td>\n<td><input name="T${i}" class="s" type="number" min="0" max="250"></td>\n<td><div id="CB${i}" onclick="expand(this,${i})" ${cals}>&#128467;</div></td></tr>`,t+=`<tr><td colspan=5><div id="WD${i}" style="display:none;">Actif en semaine`,t+='<table style="width:100%%;"><tr><th>L</th><th>M</th><th>M</th><th>J</th><th>V</th><th>S</th><th>D</th></tr><tr>',j=1;j<8;j++)t+=`<td><input id="W${i}${j}" type="checkbox"></td>`;for(t+=`</tr></table>depuis\n<select name="M${i}">`,j=0;j<12;j++)t+=`<option value="${j+1}">${ms[j]}</option>`;for(t+=`</select><input name="D${i}" class="xs" type="number" min="1" max="31"></input> jusqu'à\n<select name="P${i}">`,j=0;j<12;j++)t+=`<option value="${j+1}">${ms[j]}</option>`;t+=`</select><input name="E${i}" class="xs" type="number" min="1" max="31"></input>\n\t\t<hr></div></td></tr>`}for(t+=`<tr><td><input name="W8" id="W8" type="hidden"><input id="W80" type="checkbox"></td>\n<td>Lever de soleil<input name="H8" value="255" type="hidden"></td>\n<td><input name="N8" class="xs" type="number" min="-59" max="59"></td>\n<td><input name="T8" class="s" type="number" min="0" max="250"></td>\n<td><div onclick="expand(this,8)" ${cals}>&#128467;</div></td></tr><tr><td colspan=5>`,t+='<div id="WD8"style="display:none;"><table style="width:100%%;"><tr><th>L</th><th>M</th><th>M</th><th>J</th><th>V</th><th>S</th><th>D</th></tr><tr>',j=1;j<8;j++)t+=`<td><input id="W8${j}" type="checkbox"></td>`;for(t+="</tr></table><hr></div></td></tr>",t+=`<tr><td><input name="W9" id="W9" type="hidden"><input id="W90" type="checkbox"></td>\n<td>Coucher du soleil<input name="H9" value="255" type="hidden"></td>\n<td><input name="N9" class="xs" type="number" min="-59" max="59"></td>\n<td><input name="T9" class="s" type="number" min="0" max="250"></td>\n<td><div onclick="expand(this,9)" ${cals}>&#128467;</div></td></tr><tr><td colspan=5>`,t+='<div id="WD9" style="display:none;"><table style="width:100%%;"><tr><th>L</th><th>M</th><th>M</th><th>J</th><th>V</th><th>S</th><th>D</th></tr><tr>',j=1;j<8;j++)t+=`<td><input id="W9${j}" type="checkbox"></td>`;t+="</tr></table><hr></div></td></tr>",gId("TMT").innerHTML=t}function FC(){for(i=0;i<10;i++){let t=gId("W"+i).value;for(j=0;j<8;j++)gId("W"+i+j).checked=t>>j&1;(127!=(127&t)||i<8&&(1!=gN("M"+i).value||1!=gN("D"+i).value||12!=gN("P"+i).value||31!=gN("E"+i).value))&&expand(gId("CB"+i),i)}}function Wd(){for(a=[0,0,0,0,0,0,0,0,0,0],i=0;i<10;i++){for(m=1,j=0;j<8;j++)a[i]+=gId("W"+i+j).checked*m,m*=2;gId("W"+i).value=a[i]}"S"===d.Sf.LTR.value&&(d.Sf.LT.value=-1*parseFloat(d.Sf.LT.value)),"W"===d.Sf.LNR.value&&(d.Sf.LN.value=-1*parseFloat(d.Sf.LN.value))}function addRow(t,e,n,i){var d=gId("macros"),a=d.rows.length,l=d.insertRow(a),s=String.fromCharCode((t<10?48:55)+t);document.createElement("td");l.insertCell(0).innerHTML=`Bouton ${t}:`,l.insertCell(1).innerHTML=`<input name="MP${s}" type="number" class="s" min="0" max="250" value="${e}" required>`,l.insertCell(2).innerHTML=`<input name="ML${s}" type="number" class="s" min="0" max="250" value="${n}" required>`,l.insertCell(3).innerHTML=`<input name="MD${s}" type="number" class="s" min="0" max="250" value="${i}" required>`}function updLoc(t){parseFloat(d.Sf.LT.value)<0?(d.Sf.LTR.value="S",d.Sf.LT.value=-1*parseFloat(d.Sf.LT.value)):d.Sf.LTR.value="N",parseFloat(d.Sf.LN.value)<0?(d.Sf.LNR.value="W",d.Sf.LN.value=-1*parseFloat(d.Sf.LN.value)):d.Sf.LNR.value="E"}function GetV() {
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post" onsubmit="Wd()"><div class="helpB"><button 
type="button" onclick="H()">?</button></div><button type="button" onclick="B()">
Retour</button><button type="submit">Sauvegarder</button><hr><h2>
Paramètres du temps</h2>Obtenir le temps depuis un serveur NTP: <input 
type="checkbox" name="NT"><br><input type="text" name="NS" maxlength="32"><br>
Utilisez le format 24h: <input type="checkbox" name="CF"><br>Fuseau horaire: 
<select name="TZ"><option value="0" selected="selected">GMT(UTC)</option><option
 value="1">GMT/BST</option><option value="2">CET/CEST</option><option value="3">
EET/EEST</option><option value="4">US-EST/EDT</option><option value="5">
US-CST/CDT</option><option value="6">US-MST/MDT</option><option value="7">US-AZ
</option><option value="8">US-PST/PDT</option><option value="9">CST(AWST)
</option><option value="10">JST(KST)</option><option value="11">AEST/AEDT
</option><option value="12">NZST/NZDT</option><option value="13">North Korea
</option><option value="14">IST (India)</option><option value="15">
CA-Saskatchewan</option><option value="16">ACST</option><option value="17">
ACST/ACDT</option><option value="18">HST (Hawaii)</option><option value="19">
NOVT (Novosibirsk)</option><option value="20">AKST/AKDT (Anchorage)</option>
<option value="21">MX-CST/CDT</option></select><br>Décalage UTC: <input 
name="UO" type="number" min="-65500" max="65500" required>
 secondes (max. 18 heures)<br>L'heure locale actuelle est <span class="times">
inconnu</span>.<br>Latitude: <select name="LTR"><option value="N">N</option>
<option value="S">S</option></select><input name="LT" type="number" class="xl" 
min="0" max="66.6" step="0.01"><br>Longitude: <select name="LNR"><option 
value="E">E</option><option value="W">O</option></select><input name="LN" 
type="number" class="xl" min="0" max="180" step="0.01"><div id="sun" 
class="times"></div><h3>Horloge</h3>Couche de l'horloge: <select name="OL" 
onchange="Cs()"><option value="0" id="cn" selected="selected">Aucun</option>
<option value="1" id="ca">Horloge à aiguilles</option><option value="2">
Horloge à un chiffre</option><option value="3" id="cc">Horloge Cronixie</option>
</select><br><div id="coc">Première LED: <input name="O1" type="number" min="0" 
max="255" required> Dernière LED: <input name="O2" type="number" min="0" 
max="255" required><br><div id="cac">LED 12h: <input name="OM" type="number" 
min="0" max="255" required><br>Afficher un marqueur 5min: <input 
type="checkbox" name="O5"><br></div>Secondes (en traînée): <input 
type="checkbox" name="OS"><br></div><div id="ccc">Afficheur Cronixie: <input 
name="CX" maxlength="6"><br>Rétroéclairage Cronixie: <input type="checkbox" 
name="CB"><br></div>Mode compte à rebours: <input type="checkbox" name="CE"><br>
But du compte à rebours:<br>Date:&nbsp;<nowrap>20<input name="CY" class="xs" 
type="number" min="0" max="99" required>-<input name="CI" class="xs" 
type="number" min="1" max="12" required>-<input name="CD" class="xs" 
type="number" min="1" max="31" required></nowrap><br>Temps:<nowrap><input 
name="CH" class="xs" type="number" min="0" max="23" required>:<input name="CM" 
class="xs" type="number" min="0" max="59" required>:<input name="CS" class="xs" 
type="number" min="0" max="59" required></nowrap><br><h3>Macro de presets</h3>
<b>Les Macros ne sont plus ici !</b><br><i>
Maintenant, les Presets peuvent être utilisés comme des macros pour les sauver soit sous la forme de JSON ou de commandes d'API HTTP..
<br>Entrez ci-dessous, l'ID du preset!</i> <i>
Utilisez 0 pour l'action par défaut à la place d'un preset</i><br>
Preset On/Off d'Alexa: <input name="A0" class="m" type="number" min="0" 
max="250" required> <input name="A1" class="m" type="number" min="0" max="250" 
required><br>Preset de fin de compte à rebours: <input name="MC" class="m" 
type="number" min="0" max="250" required><br>Preset de fin de lumière minutés: 
<input name="MN" class="m" type="number" min="0" max="250" required><br><h3>
Bouton d'actions</h3><table style="margin:0 auto" id="macros"><thead><tr><td>
Bouton<br>tactile</td><td>on-&gt;off<br>court</td><td>off-&gt;on<br>long</td>
<td>double<br>N/A</td></tr></thead><tbody></tbody></table><a 
href="https://kno.wled.ge/features/macros/#analog-button" target="_blank">
Paramètres de bouton analogique</a><h3>Presets minutés</h3><div 
style="display:inline-block"><table id="TMT" style="min-width:330px"></table>
</div><hr><button type="button" onclick="B()">Retour</button><button 
type="submit">Sauvegarder</button></form></body></html>)=====";


// Autogenerated from wled00/data/fr/settings_sec.htm, do not edit!!
const char PAGE_settings_sec[] PROGMEM = R"=====(<!DOCTYPE html><html lang="fr"><head><meta name="viewport" content="width=500">
<meta charset="utf-8"><title>Autres paramètres</title><script>
var timeout,d=document;function H(){window.open("https://github.com/Aircoookie/WLED/wiki/Settings#security-settings")}function B(){window.open("/settings","_self")}function U(){window.open("/update","_self")}function gId(t){return d.getElementById(t)}function isObject(t){return t&&"object"==typeof t&&!Array.isArray(t)}function showToast(t,e=!1){var n=gId("toast");n.innerHTML=t,n.className=e?"error":"show",clearTimeout(timeout),n.style.animation="none",timeout=setTimeout((function(){n.className=n.className.replace("show","")}),2900)}function uploadFile(t,e){var n=new XMLHttpRequest;n.addEventListener("load",(function(){showToast(this.responseText,this.status>=400)})),n.addEventListener("error",(function(t){showToast(t.stack,!0)})),n.open("POST","/upload");var o=new FormData;return o.append("data",t.files[0],e),n.send(o),t.value="",!1}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="GetV()">
<form id="form_s" name="Sf" method="post"><div class="helpB"><button 
type="button" onclick="H()">?</button></div><button type="button" onclick="B()">
Retour</button><button type="submit">Sauvegarder & Redémarrer</button><hr><h2>
Securité & Paramètres de mise à jour</h2>
Bloquer la mise à jour logiciel sans fil (OTA): <input type="checkbox" 
name="NO"><br>Passe secret: <input type="password" name="OP" maxlength="32"><br>
Par sécurité, vous devez entrer un mot de passe pour activer l'OTA<br>
Le mot de passe doit être changé quand l'OTA est actif.<br><b>
Désactiver l'OTA quand il n'est pas utile, sinon un attaquant pourrait flasher son propre logiciel!
</b><br><i>
Les paramètres sur cette page ne peuvent être changés si l'OTA est activé!</i>
<br>Bloquer l'accès aux paramètres WiFi si bloqué: <input type="checkbox" 
name="OW"><br><br>Restaurer les paramètres d'usine: <input type="checkbox" 
name="RS"><br>Tous les paramètres et presets seront effacés.<br><br>
Le trafic HTTP n'est pas chiffré. Un attaquant sur le même réseau pourrait intercepter les données!
<h3>Mis à jour logiciel</h3><button type="button" onclick="U()">
Mise à jour OTA manuel</button><br>Activer ArduinoOTA: <input type="checkbox" 
name="AO"><br><h3>Archive & Restaurer</h3><a class="btn lnk" 
href="/presets.json?download" target="download-frame">Archiver les presets</a>
<br><div>Restaurer presets<br><input type="file" name="data" accept=".json"> 
<input type="button" value="Upload" 
onclick='uploadFile(d.Sf.data,"/presets.json")'><br></div><br><a 
class="btn lnk" href="/cfg.json?download" target="download-frame">
Archiver la configuration</a><br><div>Restaurer la configuration<br><input 
type="file" name="data2" accept=".json"> <input type="button" value="Upload" 
onclick='uploadFile(d.Sf.data2,"/cfg.json")'><br></div><div style="color:#fa0">
&#9888; Les presets/configurations actuelles seront écrasées si vous restaurez les presets/configurations.
<br>
Une configuration incorrecte pourrait nécessiter de revenir aux paramètres d'usine ou de reflasher l'ESP.
</div>Pour des raisons de sécurité, les mots de passe ne sont pas archivés.<h3>
À Propos</h3><a href="https://github.com/Aircoookie/WLED/" target="_blank">WLED
</a> version 0.13.0-b6<br><br><a 
href="https://github.com/Aircoookie/WLED/wiki/Contributors-and-credits" 
target="_blank">Contributeurs, dépendances et remerciements particuliers</a><br>
Un grand merci à tous ceux qui ont aidé à créer WLED!<br><br>
(c) 2016-2021 Christian Schwinne<br><i>Logiciel sous <a 
href="https://github.com/Aircoookie/WLED/blob/master/LICENSE" target="_blank">
license MIT</a></i><br><br>Message du serveur: <span class="sip">
Erreur de réponse!</span><hr><div id="toast"></div><button type="button" 
onclick="B()">Retour</button><button type="submit">Sauvegarder & Redémarrer
</button></form><iframe name="download-frame" style="display:none"></iframe>
</body></html>)=====";


// Autogenerated from wled00/data/fr/settings_um.htm, do not edit!!
const char PAGE_settings_um[] PROGMEM = R"=====(<!DOCTYPE html><html><head lang="en"><meta charset="utf-8"><meta 
name="viewport" content="width=500"><title>Paramètres des mods utilisateurs
</title><script>
var owner,locip,urows,d=document,umCfg={},pins=[6,7,8,9,10,11],pinO=["rsvd","rsvd","rsvd","rsvd","rsvd","rsvd"],loc=!1,numM=0;function gId(e){return d.getElementById(e)}function isO(e){return e&&"object"==typeof e&&!Array.isArray(e)}function H(){window.open("https://github.com/Aircoookie/WLED/wiki/Settings#usermod-settings")}function B(){window.open("/settings","_self")}function S(){"file:"==window.location.protocol&&(loc=!0,(locip=localStorage.getItem("locIp"))||(locip=prompt("Mode fichier. Entrez l'IP de WLED!"),localStorage.setItem("locIp",locip))),GetV(),numM>0||locip?ldS():gId("um").innerHTML="Aucun mods utilisateurs installé."}function isF(e){return e===+e&&e!==(0|e)}function isI(e){return e===+e&&e===(0|e)}function check(e,n){var i=e.name.replace("[]","").substr(-3);if("number"==e.type&&"pin"==i.substr(0,3))for(var t=0;t<pins.length;t++)if(n!=pinO[t]){if(e.value==pins[t]||e.value<-1||e.value>39){e.style.color="red";break}e.style.color=e.value>33?"orange":"#fff"}}function getPins(e){if(isO(e))for(const[i,t]of Object.entries(e))if(isO(t))owner=i,getPins(t);else if("pin"==i.replace("[]","").substr(-3))if(Array.isArray(t))for(var n=0;n<t.length;n++)t[n]>=0&&(pins.push(t[n]),pinO.push(owner));else t>=0&&(pins.push(t),pinO.push(owner));else if(Array.isArray(t))for(n=0;n<t.length;n++)getPins(t[n])}function addField(e,n,i,t=!1){if(isO(i))for(const[t,o]of Object.entries(i))"unknown"===n||e.includes(":")?addField(e,t,o):addField(e+":"+n,t,o);else if(Array.isArray(i))for(var o=0;o<i.length;o++)addField(e,n,i[o],!0);else{var r,s=typeof i;switch(s){case"boolean":s="checkbox",r='value="true"'+(i?" checked":"");break;case"number":r=`value="${i}"`,"pin"===n.substr(-3)?(r+=' max="39" min="-1" style="width:40px;"',s="int"):r+=' step="any" style="width:100px;"';break;default:s="text",r=`value="${i}" style="width:250px;"`}e.includes(":")&&(urows+=e.substr(e.indexOf(":")+1)),urows+=` ${n}: `,"checkbox"==s?urows+=`<input type="hidden" name="${e}:${n}${t?"[]":""}" value="false">`:t||(urows+=`<input type="hidden" name="${e}:${n}${t?"[]":""}" value="${s}">`),urows+=`<input type="${"int"===s?"number":s}" name="${e}:${n}${t?"[]":""}" ${r} oninput="check(this,'${e.substr(e.indexOf(":")+1)}')"><br>`}}function ldS(){fetch((loc?"http://"+locip:"")+"/cfg.json",{method:"get"}).then(e=>(e.ok||(gId("lserr").style.display="inline"),e.json())).then(e=>{if(umCfg=e.um,getPins(e),urows="",isO(umCfg))for(const[e,n]of Object.entries(umCfg))urows+=`<hr><h3>${e}</h3>`,addField(e,"unknown",n);""===urows&&(urows="Configuration des mods utilisateurs non trouvée.<br>Appuyez <i>Sauvegarder</i> pour remettre à zéro."),gId("um").innerHTML=urows}).catch((function(e){gId("lserr").style.display="inline",console.log(e)}))}function svS(e){e.preventDefault(),console.log(d.Sf),d.Sf.checkValidity()&&d.Sf.submit()}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post" onsubmit="svS(event)"><div class="toprow">
<div class="helpB"><button type="button" onclick="H()">?</button></div><button 
type="button" onclick="B()">Retour</button><button type="submit">Sauvegarder
</button><br><span id="lssuc" style="color:green;display:none">
&#10004; Configuration sauvegardée!</span> <span id="lserr" 
style="color:red;display:none">&#9888; Impossible de charger la configuration.
</span><hr></div><h2>Paramètres des mods utilisateurs</h2><div id="um">
Changement des paramètres...</div><hr><button type="button" onclick="B()">Retour
</button><button type="submit">Sauvegarder</button></form></body></html>)=====";

